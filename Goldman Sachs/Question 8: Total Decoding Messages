Problem Name: Total Decoding Messages 
Link: https://practice.geeksforgeeks.org/problems/total-decoding-messages1235/1/

Question
A top secret message containing letters from A-Z is being encoded to numbers using the following mapping:
    'A' -> 1
    'B' -> 2
    ...
    'Z' -> 26
You are an FBI agent. You have to determine the total number of ways that message can be decoded, as the answer can be large return the answer modulo 10^9 + 7.
Note: An empty digit sequence is considered to have one decoding. It may be assumed that the input contains valid digits from 0 to 9 and If there are leading 0’s, 
extra trailing 0’s and two or more consecutive 0’s then it is an invalid string.


Time Complexity: O(N), where N is length of string
Space Complexity: O(1)


Solution
#include<bits/stdc++.h>
using namespace std;

class Solution {
	public:
		
		int mod = 1000000007;
	    int addMod(int a, int b){
	        
	        long long int sum = ((a % mod) + (b % mod)) % mod;
	        return sum;
	    }
	    
		int CountWays(string s){
		    // Code here
		    
            vector<int> dp(s.length() + 1);        
            dp[0] = 1;
            if(s[0] == '0'){
                dp[1] = 0;
            }
            else{
                dp[1] = 1;
            }
            
            for(int i=2; i<=s.length(); i++){
                int d = s[i-1] - '0';
                int dd = (10 * (s[i-2] - '0')) + (s[i-1] - '0');
                
                if(0 < d){
                    dp[i] = addMod(dp[i], dp[i-1]);
                }
                
                if(9 < dd  &&  dd < 27){
                    dp[i] = addMod(dp[i], dp[i-2]);
                }
            }
            
            return dp[s.length()];
        }
};

int main(){
	int tc;
	cin >> tc;
	while(tc--){
		string str;
		cin >> str;
		Solution obj;
		int ans = obj.CountWays(str);
		cout << ans << "\n";
	}
	return 0;
}
