Problem Name: Rotate by 90 degree 
Link: https://practice.geeksforgeeks.org/problems/rotate-by-90-degree0356/1/

Question
Given a square matrix[][] of size N x N. The task is to rotate it by 90 degrees in an anti-clockwise direction without using any extra space.


Time Complexity: O(N * N), where N is the length of row in the matrix
Space Complexity: O(1)


Solution
import java.util.*; 
import java.io.*;
import java.lang.*;

class DriverClass{
	public static void main(String[] args) 	{ 
	    Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while (t-- > 0) {
            int n = sc.nextInt();
            int[][] arr = new int[n][n];
            
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                    arr[i][j] = sc.nextInt();
            
            GFG g = new GFG();
            g.rotate(arr);
            printMatrix (arr);
        }
	} 
	
	static void printMatrix(int arr[][]) { 
		for (int i = 0; i < arr.length; i++) { 
			for (int j = 0; j < arr[0].length; j++) 
				System.out.print(arr[i][j] + " "); 
			System.out.println(""); 
		} 
	} 
}

class GFG{
   static void rotate(int matrix[][]) {
       // Code Here
       int n=matrix.length;
       int m=matrix[0].length;
       //transpose of matrix
       for(int i=0;i<n;i++){
           for(int j=i+1;j<m;j++){
               int tmp=matrix[i][j];
               matrix[i][j]=matrix[j][i];
               matrix[j][i]=tmp;
           }
       }
       
       //reversing rows
       for(int i=0;i<n/2;i++){
           for(int j=0;j<m;j++){
               int tmp=matrix[i][j];
               matrix[i][j]=matrix[m-i-1][j];
               matrix[m-i-1][j]=tmp;
           }
       }
   }
}
