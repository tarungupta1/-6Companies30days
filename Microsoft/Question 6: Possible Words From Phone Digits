Problem Name: Possible Words From Phone Digits  
Link: https://practice.geeksforgeeks.org/problems/possible-words-from-phone-digits-1587115620/1/

Question
Given a keypad as shown in the diagram, and an N digit number which is represented by array a[ ], the task is to list all words which are possible by pressing these numbers.


Time Complexity: O(4^N * N), where N is the length of the array
Space Complexity: O(N), where N is the length of the array


Solution
#include <bits/stdc++.h>
#include <string>
using namespace std;

class Solution{
    public:
    void getCombination(int arr[], int idx, int &N, string &curr, vector<string> &res, string map[]) {
        if(idx == N) {
            res.push_back(curr);
            return;
        }
        
        for(char ch : map[arr[idx]]) {
            curr.push_back(ch);
            getCombination(arr, idx+1, N, curr, res, map);
            curr.pop_back();
        }
    }
    
    vector<string> possibleWords(int a[], int N){
        string curr = "";
        vector<string> res;
        string map[10] = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        
        getCombination(a, 0, N, curr, res, map);
        return res;
    }
};

int main() {
	int T;
	cin >> T; 
	while(T--){ 
	   int N;
	   cin >> N; 
	   int a[N]; 
	   for(int i =0;i<N;i++){
	       cin >> a[i]; 
	   }
	   
	   Solution obj;
	   
	   vector <string> res = obj.possibleWords(a,N);
	   for (string i : res){
	       cout << i << " ";
	   }
	   
	   cout << endl;
	}
	
	return 0;
}
