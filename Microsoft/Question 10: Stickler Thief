Problem Name: Stickler Thief 
Link: https://practice.geeksforgeeks.org/problems/stickler-theif-1587115621/1/

Question
Stickler the thief wants to loot money from a society having n houses in a single line. He is a weird person and follows a certain rule when looting the houses. 
According to the rule, he will never loot two consecutive houses. At the same time, he wants to maximize the amount he loots. The thief knows which house has what 
amount of money but is unable to come up with an optimal looting strategy. He asks for your help to find the maximum money he can get if he strictly follows the rule. 
Each house has a[i]amount of money present in it.


Time Complexity: O(N), where N is the number of elements in vector
Space Complexity: O(N), where N is the number of elements in vector


Solution
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

class Solution{
    public:
    //Function to find the maximum money the thief can get.
    int findMax(int arr[], int n, int i,vector<int> &vec){
       if(i>=n){
           return 0;
       }
       if(vec[i]){
           return vec[i];
       }
       
       return vec[i] = max(arr[i]+findMax(arr, n, i+2, vec), findMax(arr, n, i+1, vec));
   }
   
   int FindMaxSum(int arr[], int n){
      vector<int> vec(n,0);
      
      return findMax(arr, n, 0, vec);
   }
};

int main(){
    //taking total testcases
	int t;
	cin>>t;
	while(t--)	{
	    //taking number of houses
		int n;
		cin>>n;
		int a[n];
		
		//inserting money of each house in the array
		for(int i=0;i<n;++i)
			cin>>a[i];
		Solution ob;
		
		//calling function FindMaxSum()
		cout<<ob.FindMaxSum(a,n)<<endl;
	}
	return 0;
}
