Problem Name: Partition Equal Subset Sum 
Link: https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1

Question
Stickler the thief wants to loot money from a society having n houses in a single line. He is a weird person and follows a certain rule when looting the houses. 
According to the rule, he will never loot two consecutive houses. At the same time, he wants to maximize the amount he loots. The thief knows which house has what 
amount of money but is unable to come up with an optimal looting strategy. He asks for your help to find the maximum money he can get if he strictly follows the rule. 
Each house has a[i]amount of money present in it.


Time Complexity: O(N * (SUM|ARR|)), where N is the number of elements in vector and SUM|ARR| is the sum of the elements in vector
Space Complexity: O(N * (SUM|ARR|)), where N is the number of elements in vector and SUM|ARR| is the sum of the elements in vector


Solution
#include <bits/stdc++.h>
using namespace std;

class Solution{
public:
    int equalPartition(int N, int arr[]){
        // code here
        int sum = 0;
        for(int i=0; i<N; i++){
            sum+=arr[i];
        }
        if(sum%2 != 0){
            return 0;
        }
        bool dp[N+1][sum+1];
        for(int i=0; i<=sum; i++){
            dp[0][i] = false;
        }
        for(int i=0; i<=N; i++){
            dp[i][0] = true;
        }
        for(int i=1; i<=N; i++){
            for(int j=1; j<=sum; j++){
                if(arr[i-1] <= j){
                    dp[i][j] = (dp[i-1][j] or dp[i-1][j-arr[i-1]]);
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        if(dp[N][sum/2] == true){
            return 1;
        }
        return 0;
    }
};

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        int arr[N];
        for(int i = 0;i < N;i++)
            cin>>arr[i];
        
        Solution ob;
        if(ob.equalPartition(N, arr))
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
    return 0;
}
