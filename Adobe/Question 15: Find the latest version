Problem Name: Find the Latest Version

Question
Given two library versions of an executable: for example, “10.1.1.3” and “10.1.1.9” or “10” and “10.1”. Find out which one is more recent? Strings can be empty also.


Time Complexity: O(N * |S|), where N is the number of elements in vector and |S| is the maximum length of a version
Space Complexity: O(N * |S|), where N is the number of elements in vector and |S| is the maximum length of a version


Solution
import java.io.*;
import java.util.*;

class GFG {
	public static String mostRecent(String a, String b) {
		int i=0, j=0;
		while(true){
		    
		    int num1 = 0;
		    while(i < a.length()  &&  a.charAt(i) != '.'){
		        num1 = (num1 * 10) + (int)(a.charAt(i) - '0');
		        i++;
		    }
		    i++;
		    
		    int num2 = 0;
		    while(j < b.length()  &&  b.charAt(j) != '.'){
		        num2 = (num2 * 10) + (int)(b.charAt(j) - '0');
		        j++;
		    }
		    j++;
		    
		    if(num1 < num2){
		        return b;
		    }
		    else if(num1 > num2){
		        return a;
		    }
		    else{
		        if(i >= a.length()  &&  j >= b.length()){
		            break;
	            }
	            else{
	                continue;
	            }
		    }
		}
		
		return a;
	}

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		scn.nextLine();
		
		String[] str = new String[n];
		for(int i=0; i<n; i++){
		    str[i] = scn.nextLine();
		}
		
		String temp = str[0];
		for(int i=0; i<n; i++){
		    temp = mostRecent(temp, str[i]);
		}
		
		System.out.println(temp);
	}
}
