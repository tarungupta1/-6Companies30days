Problem Name: Subarray with given sum
Link: https://practice.geeksforgeeks.org/problems/subarray-with-given-sum-1587115621/1

Question
Given an unsorted array A of size N that contains only non-negative integers, find a continuous sub-array which adds to a given number S.


Time Complexity: O(N), where N is the number of elements in array
Space Complexity: O(1)


Solution
#include <bits/stdc++.h>
using namespace std;

class Solution{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(int arr[], int n, long long s)    {
        // Your code here
        
        int l=0;
        long long sum=0;
        for(int i=0;i<n;i++){
            sum+=arr[i];
            while(sum>=s){
                if(sum==s){
                    return vector<int>{l+1,i+1};
                }
                sum-=arr[l];
                l++;
            }
            
        }
        return vector<int>{-1};
    }
};

int main() {
    int t;
    cin>>t;
    while(t--)    {
        int n;
        long long s;
        cin>>n>>s;
        int arr[n];
        const int mx = 1e9;
        for(int i=0;i<n;i++)        {
            cin>>arr[i];
        }
        Solution ob;
        vector<int>res;
        res = ob.subarraySum(arr, n, s);
        
        for(int i = 0;i<res.size();i++)
            cout<<res[i]<<" ";
        cout<<endl;
        
    }
	return 0;
}  
