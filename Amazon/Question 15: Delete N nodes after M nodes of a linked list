Problem Name: Delete N nodes after M nodes of a linked list 
Link: https://practice.geeksforgeeks.org/problems/delete-n-nodes-after-m-nodes-of-a-linked-list/1/

Question
Given a linked list, delete N nodes after skipping M nodes of a linked list until the last of the linked list.

Time Complexity: O(N), where N is length of the linked list
Space Complexity: O(N), where N is length of the linked list


Solution
#include<stdio.h>
#include<stdlib.h>
#include<iostream>
using namespace std;

struct Node{
    int data;
    struct Node *next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
    
};

struct Node *start = NULL;

/* Function to print nodes in a given linked list */
void printList(struct Node *node){
    while(node != NULL)    {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
    
}

void insert(int n1){
    int n,value;
    n=n1;
    struct Node *temp;
    
    for(int i=0;i<n;i++){
        cin>>value;
        if(i==0){
            start = new Node(value);
            temp=start;
            continue;
        }
        else{
            temp->next = new Node(value);
            temp=temp->next;
        }
    }
}

class Solution{
    public:
    void linkdelete(struct Node * head, int M, int N) {
        Node * temp = head, * prev = NULL;
        int tm = M, tn = N;
        while (temp != NULL) {
            if (tm != 0) {
                tm--;
                prev = temp;
                temp = temp -> next;
            } 
            else {
                if (tn == 0) {
                    tm = M;
                    continue;
                }
                tn--;
                prev -> next = temp -> next;
                temp = temp -> next;
                if (tn == 0) {
                    tm = M;
                    tn = N;
                }
            }
        }
    }
};

int main(){
    int t,n1;
    cin>>t;
    while (t--) {
        cin>>n1;
        int m,n;
        cin>>m;
        cin>>n;
        insert(n1);
        Solution ob;
        ob.linkdelete(start,m,n);
        printList(start);
    }
    
    return 0;
}
