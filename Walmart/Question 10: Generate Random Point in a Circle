Problem Name: Generate Random Point in a Circle
Link: https://leetcode.com/problems/generate-random-point-in-a-circle/

Question
Given the radius and the position of the center of a circle, implement the function randPoint which generates a uniform random point inside the circle.
Implement the Solution class:
  1. Solution(double radius, double x_center, double y_center) initializes the object with the radius of the circle radius and the position of the center (x_center, y_center).
  2. randPoint() returns a random point inside the circle. A point on the circumference of the circle is considered to be in the circle. The answer is returned as an array [x, y].
 

Time Complexity: O(1)
Space Complexity: O(1)


Solution
class Solution {
    double R, X, Y;
    public:
        Solution(double radius, double x_center, double y_center): R(radius), X(x_center), Y(y_center) {
            srand(time(0));
        }
    
        double random() {
            return (double) rand() / RAND_MAX; // for generating random points between 0 to 1
        }
    
        vector < double > randPoint() {
            vector < double > randomPoint(2);
            
            double len = sqrt(random()) * R, deg = 2 * M_PI * random();
            
            randomPoint[0] = X + len * cos(deg);
            randomPoint[1] = Y + len * sin(deg);
            
            return randomPoint;
        }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(radius, x_center, y_center);
 * vector<double> param_1 = obj->randPoint();
 */


